package bankteller.Test;
import bankteller.Account;
import bankteller.AccountDatabase;
import bankteller.Profile;
import bankteller.MoneyMarketAccount;
import bankteller.Savings;
import bankteller.CollegeCheckingAccount;
import bankteller.Checking;
import org.junit.internal.Checks;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class AccountDatabaseOpenTest{


    /**
     * Normal add, should work
     */
    @Test
    void open() {
        Profile holder = new Profile("Anshul", "prasad", "06/18/2001");

        Profile holder2 = new Profile("April", "March", "1/15/1987");

        Profile holder3 = new Profile("Aayush", "prasad", "06/18/2001");
        Profile holder4 = new Profile("John", "Doe", "05/18/2009");

        Account account1 = new MoneyMarketAccount(holder, 2600);
        Account account2 = new Savings(holder2, 100.0,1);
        Account account3 = new CollegeCheckingAccount(holder3, 100.0,1);

        AccountDatabase test = new AccountDatabase();

        test.open(account1);
        test.open(account2);
        test.open(account3);

        Account add = new Checking(holder4, 2000);
        Assertions.assertEquals(true,test.open(add));


    }

    /**
     * Same account with same holder exists. Should not work
     */
    @Test
    void open2(){
        Profile holder = new Profile("Anshul", "prasad", "06/18/2001");

        Profile holder2 = new Profile("April", "March", "1/15/1987");

        Profile holder3 = new Profile("Aayush", "prasad", "06/18/2001");
        Profile holder4 = new Profile("John", "Doe", "05/18/2009");

        Account account1 = new MoneyMarketAccount(holder, 2600);
        Account account2 = new Savings(holder2, 100.0,1);
        Account account3 = new CollegeCheckingAccount(holder3, 100.0,1);

        AccountDatabase test = new AccountDatabase();

        test.open(account1);
        test.open(account2);
        test.open(account3);

        Account add = new MoneyMarketAccount(holder, 2000);
        Assertions.assertEquals(false,test.open(add));
    }
    /**
     * Creating College Checking Account with same holder with a Checking Account
     * Should fail
     */
    @Test
    void open3(){
        Profile holder = new Profile("Anshul", "prasad", "06/18/2001");

        Profile holder2 = new Profile("April", "March", "1/15/1987");

        Profile holder3 = new Profile("Aayush", "prasad", "06/18/2001");
        Profile holder4 = new Profile("John", "Doe", "05/18/2009");

        Account account1 = new MoneyMarketAccount(holder, 2600);
        Account account2 = new Savings(holder2, 100.0,1);
        Account account3 = new Checking(holder3, 100.0);

        AccountDatabase test = new AccountDatabase();

        test.open(account1);
        test.open(account2);
        test.open(account3);

        Account add = new CollegeCheckingAccount(holder3, 2000,1);
        Assertions.assertEquals(false,test.open(add));
    }

    /**
     * Reopen Account Successful
     */
    @Test
    void open4(){
        Profile holder = new Profile("Anshul", "prasad", "06/18/2001");

        Profile holder2 = new Profile("April", "March", "1/15/1987");

        Profile holder3 = new Profile("Aayush", "prasad", "06/18/2001");
        Profile holder4 = new Profile("John", "Doe", "05/18/2009");

        Account account1 = new MoneyMarketAccount(holder, 2600);
        Account account2 = new Savings(holder2, 100.0,1);
        Account account3 = new Checking(holder3, 100.0);

        AccountDatabase test = new AccountDatabase();

        test.open(account1);
        test.open(account2);
        test.open(account3);
        test.close(account3);

        Account add = new Checking(holder3, 100.0);
        Assertions.assertEquals(true,test.open(add));
    }

    /**
     * Open open Account, should fail
     */
    @Test
    void open5(){
        Profile holder = new Profile("Anshul", "prasad", "06/18/2001");

        Profile holder2 = new Profile("April", "March", "1/15/1987");

        Profile holder3 = new Profile("Aayush", "prasad", "06/18/2001");
        Profile holder4 = new Profile("John", "Doe", "05/18/2009");

        Account account1 = new MoneyMarketAccount(holder, 2600);
        Account account2 = new Savings(holder2, 100.0,1);
        Account account3 = new Checking(holder3, 100.0);

        AccountDatabase test = new AccountDatabase();

        test.open(account1);
        test.open(account2);
        test.open(account3);

        Account add = new Checking(holder3, 100.0);
        Assertions.assertEquals(false,test.open(add));
    }
}